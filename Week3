2025_9_17 TIL
3주차 정리 - 다트 언어 이해하기
다트(Dart) 언어 개요
1) 구글에서 자바스크립트 대체 목표로 개발 (초기엔 실패)
2) 2017년 Flutter 출시와 함께 빠르게 성장
3) 현재 구글의 적극적 지원과 생태계 확장으로 미래 전망 밝음
주요 특징
1) Null Safety 지원 -> 안정적인 코드 작성 가능
2) 타입 시스템 -> var, String, int, double 등 명시적 추론 가능
3) 컬렉션 타입 -> List, Set, Map 다양한 자료구조 제공
4) 제어문 -> if, swith, for, for-in, while 등 기본 문법 직관적
5) 객체지향 프로그래밍 지원 -> 클래스, 상속, 오버라이딩 활용 가능
6) Dart 3.x 업데이트 -> Records, 패턴 매칭 등 최신 기능 도입
장점
1) Flutter와 결합 시 크로스플랫폼 앱 개발에 최적화
2) 직관적인 문법과 풍부한 자료형, 함수 지원
3) 강력한 Null Safety로 런타임 오류 줄임
4) 최신 버전에서 패턴 매칭/레코드 등 개발자 친화적 기능 추가
단점
1) 초기 생태계 규모는 여전히 javascript에 비해 작음
2) 비교적 최근 언어라서 레거시 시스템과 호환성 이슈 존재
3) Dart만 단독으로 사용하는 경우는 드뭄 (대부분 Flutter 기반)
개발 환경
테스트 도구: DartPad
기본 코드 예시:
void main() {
    print('Hello, Dart!');
}
